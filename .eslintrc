{
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "airbnb-typescript",
    "airbnb/hooks",
    "prettier",
    "prettier/@typescript-eslint",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module",
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "jsx": true,
      "globalReturn": false,
      "restParams": true,
      "spread": true
    },
    "allowImportExportEverywhere": true,
    "babelOptions": {
      "configFile": "./babel.config.js"
    }
  },
  "plugins": ["prettier", "autofix"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "webpack": {
        "config": "./webpack/configs/main.ts"
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "rules": {
    "prettier/prettier": "error",

    // Rules that can fixed automatically
    "autofix/no-unused-vars": "warn",

    // Default rules
    "no-nested-ternary": "warn",
    "import/no-cycle": "off",
    "camelcase": "off",
    "no-underscore-dangle": "off",
    "import/no-duplicates": "warn",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "./webpack/**",
          "./server/index.dev.js",
          "./server/helpers/compilerPromise.ts",
          "__tests__/**",
          "setupTests.ts",
          "**/*.dev.ts"
        ]
      }
    ],

    // Specific rules for React
    "react/no-array-index-key": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".jsx", ".tsx"] }],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens",
        "assignment": "parens",
        "return": "parens",
        "arrow": "parens",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ],
    "react/jsx-props-no-spreading": "off",

    // Accessibility rules
    "jsx-a11y/accessible-emoji": "off",
    "jsx-a11y/alt-text": "off",
    "jsx-a11y/anchor-has-content": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/aria-activedescendant-has-tabindex": "off",
    "jsx-a11y/aria-props": "off",
    "jsx-a11y/aria-proptypes": "off",
    "jsx-a11y/aria-role": "off",
    "jsx-a11y/aria-unsupported-elements": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/heading-has-content": "off",
    "jsx-a11y/html-has-lang": "off",
    "jsx-a11y/iframe-has-title": "off",
    "jsx-a11y/img-redundant-alt": "off",
    "jsx-a11y/interactive-supports-focus": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/media-has-caption": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/no-access-key": "off",
    "jsx-a11y/no-autofocus": "off",
    "jsx-a11y/no-distracting-elements": "off",
    "jsx-a11y/no-interactive-element-to-noninteractive-role": "off",
    "jsx-a11y/no-noninteractive-element-interactions": "off",
    "jsx-a11y/no-noninteractive-element-to-interactive-role": "off",
    "jsx-a11y/no-noninteractive-tabindex": "off",
    "jsx-a11y/no-onchange": "off",
    "jsx-a11y/no-redundant-roles": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/role-has-required-aria-props": "off",
    "jsx-a11y/role-supports-aria-props": "off",
    "jsx-a11y/scope": "off",
    "jsx-a11y/tabindex-no-positive": "off",
    "jsx-a11y/control-has-associated-label": "off"
  }
}
